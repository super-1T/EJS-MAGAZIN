<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head'); %>
</head>

<body>
    <audio
    controls
 class="audioDoneReg" style="display: none;">
    <source src="audio/doneReg.mp3" type="audio/mpeg">
    </audio>
    <div class="hi">
        <div class="hi__block">
            <a class="hi__block-link autho-show">Зарегистрироваться</a>
            <a class="hi__block-link login-show">Авторизироваться</a>
        </div>
        <div class="hi__block autho-block hide-login">
                <label for="name">Введите ваше имя:</label>
                <input type="text" maxlength="25" name="name" placeholder="Петров">
                <label for="name">Введите вашу почту:</label>
                <input type="text"  name="email" placeholder="example@yandex.ru">
                <label for="name">Введите ваш пароль:</label>
                <input class="atho-pass" type="password" maxlength="25" name="name" placeholder="SecretWords">
                <button type="submit" class="btn_autho">Зарегаться</button>
                <div class="notice"></div>
        </div>
        <div class="hi__block login-block hide-login">
            <label for="name">Введите вашу почту:</label>
            <input type="text" name="name" placeholder="example@yandex.ru">
            <label for="name">Введите ваш пароль:</label>
            <input type="password" name="name" placeholder="SecretWords">
            <button type="submit" class="btn_login">Войти</button>
        </div>
    </div>

</body>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="js/jquery.pagepiling.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
<script src="js/main.js"></script>
<script type="text/javascript">
const autho_btn = document.querySelector('.autho-show');
const login_btn = document.querySelector('.login-show');
const auto_block = document.querySelector('.autho-block');
const login_block = document.querySelector('.login-block');
const notice = document.querySelector('.notice')
const atho_pass = document.querySelector('.atho-pass');
const regis = document.querySelector('.btn_autho')
const email = document.querySelector("input[name='email']");
const doneReg = document.querySelector('.audioDoneReg');

/* atho_pass.addEventListener("input", () => {
    if(document.querySelector('.password-retype')) {
        return false;
    } else {
        const atho_pass_retype = document.createElement('input');
        atho_pass_retype.setAttribute('type', 'password');
        atho_pass_retype.setAttribute('placeholder', 'Повторите пароль')
        atho_pass_retype.setAttribute('name', 'password-retype');
        atho_pass_retype.classList.add('password-retype')
        regis.insertAdjacentElement('beforebegin', atho_pass_retype)
    }

}) */

if (autho_btn && login_btn) {
    let validEmail = false;
    const enter = document.querySelector('.btn_login')
    const inputs_autho = document.querySelectorAll('.autho-block input')
    const inputs_enter = document.querySelectorAll('.login-block input')

    const validateEmail = (email) => {
        return email.value.match(
            /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
        );
    };

    const validate = () => {

    notice.innerHTML = '';

    if(validateEmail(email)){
        notice.innerHTML = email.value + ' is valid.';
        notice.style.color = 'green';
        validEmail = true;
    } else{
        notice.innerHTML = email.value + ' is invalid.';
        notice.style.color = 'red';
        validEmail = false;
    }
    return false;
    }

    email.addEventListener('input', validate)

    autho_btn.addEventListener('click', () => {
        if (!login_block.classList.contains('hide-login')) {
            login_block.classList.remove('show-login')
            login_block.classList.add('hide-login')
        }
        auto_block.classList.add('show-login')
        auto_block.classList.remove('hide-login')
    })

    login_btn.addEventListener('click', () => {
        if (!auto_block.classList.contains('hide-login')) {
            auto_block.classList.remove('show-login')
            auto_block.classList.add('hide-login')
        }
        login_block.classList.add('show-login')
        login_block.classList.remove('hide-login')
    })

    const objRegis = {
        name: null,
        email: null,
        password: null,
    }
    regis.addEventListener('click', (e) => {
        e.preventDefault();
        doneReg.play()
        let notEmpty = 0;
        let isEmpty = 0;
        inputs_autho.forEach((el) => {
            if(el.value.length > 0) {
                el.style.borderColor = 'green'  
                return notEmpty++  
            } else {
                el.style.borderColor = 'red'  
                return isEmpty++
            }
        })

        if(isEmpty > 0) {
            const p_notice = document.createElement('p');
                p_notice.style.color = 'red';
                p_notice.innerHTML = 'Заполните пустые инпуты'
                notice.appendChild(p_notice)
        }

        if(validEmail && isEmpty === 0 && atho_pass.value.length >= 7) {
            alert(validEmail)
            objRegis.password = atho_pass.value;
            objRegis.name = document.querySelector('input[name="name"]').value;
            objRegis.email = email.value;
            axios.post('/api/regisUser', {
                name: objRegis.name,
                email: objRegis.email,
                password: objRegis.password
            }).then(function (response) {
                alert(JSON.stringify(response.data));
            })
            .catch(function (error) {
                console.log(error);
            });
        }


    })

}
</script>
</html>